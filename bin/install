#!/usr/bin/env bash

set -euo pipefail

[[ -z ${ASDF_INSTALL_TYPE+x} ]] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[[ -z ${ASDF_INSTALL_VERSION+x} ]] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[[ -z ${ASDF_INSTALL_PATH+x} ]] && echo "ASDF_INSTALL_PATH is required" && exit 1

install() {
	local install_type=$1
	[[ ${install_type} != "version" ]] && echo "install type, ${install_type}, is not supported" && exit 1

	local version=$2
	local install_path=$3

	local tmp_download_dir

	if [[ -z ${TMPDIR:-} ]]; then
		tmp_download_dir=$(mktemp -d)
	else
		tmp_download_dir=${TMPDIR%/}
	fi

	local bin_install_path="${install_path}/bin"

	local platform
	platform=$(uname | tr '[:upper:]' '[:lower:]')

	local arch
	arch=$(uname -m)
	case "${arch}" in
	x86_64) arch="amd64" ;;
	aarch64) arch="arm64" ;;
	arm*) arch="arm" ;;
	esac

	local download_url
	download_url="https://github.com/justjanne/powerline-go/releases/download/v${version}/powerline-go-${platform}-${arch}"

	echo "Downloading powerline-go from ${download_url}"

	pushd "${tmp_download_dir}" >/dev/null

	curl -sLO "${download_url}"

	mkdir -p "${bin_install_path}"

	cp powerline-go-* "${bin_install_path}/powerline-go"
	chmod +x "${bin_install_path}/powerline-go"

	popd >/dev/null
}

install "${ASDF_INSTALL_TYPE}" "${ASDF_INSTALL_VERSION}" "${ASDF_INSTALL_PATH}"
